openapi: 3.0.3
info:
  title: User Service API
  description: API for managing users with email notifications and metrics collection
  version: 1.0.0
  contact:
    name: User Service Team
    url: https://github.com/yourusername/mailflow

servers:
  - url: http://localhost:8080
    description: Main API server
  - url: http://localhost:9101
    description: Metrics server

tags:
  - name: users
    description: Operations about users
  - name: metrics
    description: Monitoring metrics endpoints

paths:
  /api/v1/users:
    post:
      tags:
        - users
      summary: Create new email
      description: Create a new email and triggers welcome email sending
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/users/{id}:
    get:
      tags:
        - users
      summary: Get email by ID
      description: Retrieve email information by ID
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /metrics:
    get:
      tags:
        - metrics
      summary: Get service metrics
      description: Retrieve RED metrics (Request rate, Error rate, Duration)
      operationId: getMetrics
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    User:
      type: object
      required:
        - email
        - username
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
        created_at:
          type: string
          format: date-time

    CreateUserRequest:
      type: object
      required:
        - email
        - username
      properties:
        email:
          type: string
          format: email
        username:
          type: string

    CreateUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'

    GetUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: object
          additionalProperties: true

  responses:
    BadRequest:
      description: Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'